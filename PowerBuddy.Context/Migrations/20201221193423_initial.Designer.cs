// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PowerBuddy.Data.Context;

namespace PowerBuddy.Data.Context.Migrations
{
    [DbContext(typeof(PowerLiftingContext))]
    [Migration("20201221193423_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityUserClaim");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("IdentityUserRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("IdentityUserToken");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdminApprover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ExerciseTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainExercise")
                        .HasColumnType("bit");

                    b.HasKey("ExerciseId");

                    b.HasAlternateKey("ExerciseName");

                    b.HasIndex("ExerciseTypeId");

                    b.ToTable("Exercise");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ExerciseMuscleGroup", b =>
                {
                    b.Property<int>("ExerciseMuscleGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ExerciseMuscleGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseMuscleGroupId");

                    b.ToTable("ExerciseMuscleGroup");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ExerciseMuscleGroupAssoc", b =>
                {
                    b.Property<int>("ExerciseMuscleGroupAssocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<string>("ExerciseMuscleGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.HasKey("ExerciseMuscleGroupAssocId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("ExerciseMuscleGroupAssoc");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ExerciseSport", b =>
                {
                    b.Property<int>("ExerciseSportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<string>("ExerciseSportStr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseSportId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("ExerciseSport");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ExerciseType", b =>
                {
                    b.Property<int>("ExerciseTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ExerciseTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ExerciseTypeId");

                    b.HasAlternateKey("ExerciseTypeName");

                    b.ToTable("ExerciseType");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("GenderName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenderId");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.LiftingLevel", b =>
                {
                    b.Property<int>("LiftingLevelId")
                        .HasColumnType("int");

                    b.Property<string>("LiftingLevelStr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LiftingLevelId");

                    b.ToTable("LiftingLevel");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.LiftingStatAudit", b =>
                {
                    b.Property<int>("LiftingStatAuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("RepRange")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WorkoutSetId")
                        .HasColumnType("int");

                    b.HasKey("LiftingStatAuditId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("UserId");

                    b.ToTable("LiftingStatAudit");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.MemberStatus", b =>
                {
                    b.Property<int>("MemberStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("MemberStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberStatusId");

                    b.ToTable("MemberStatus");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ProgramLog", b =>
                {
                    b.Property<int>("ProgramLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CustomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Friday")
                        .HasColumnType("bit");

                    b.Property<bool>("Monday")
                        .HasColumnType("bit");

                    b.Property<int>("NoOfWeeks")
                        .HasColumnType("int");

                    b.Property<bool>("Saturday")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Sunday")
                        .HasColumnType("bit");

                    b.Property<int?>("TemplateProgramId")
                        .HasColumnType("int");

                    b.Property<bool>("Thursday")
                        .HasColumnType("bit");

                    b.Property<bool>("Tuesday")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Wednesday")
                        .HasColumnType("bit");

                    b.HasKey("ProgramLogId");

                    b.HasIndex("TemplateProgramId");

                    b.ToTable("ProgramLog");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ProgramLogDay", b =>
                {
                    b.Property<int>("ProgramLogDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProgramLogWeekId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgramLogDayId");

                    b.HasIndex("ProgramLogWeekId");

                    b.ToTable("ProgramLogDay");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ProgramLogExercise", b =>
                {
                    b.Property<int>("ProgramLogExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("NoOfSets")
                        .HasColumnType("int");

                    b.Property<bool?>("PersonalBest")
                        .HasColumnType("bit");

                    b.Property<int>("ProgramLogDayId")
                        .HasColumnType("int");

                    b.Property<int>("ProgramLogExerciseTonnageId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkoutTemplateId")
                        .HasColumnType("int");

                    b.HasKey("ProgramLogExerciseId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("ProgramLogDayId");

                    b.HasIndex("WorkoutTemplateId");

                    b.ToTable("ProgramLogExercise");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ProgramLogExerciseAudit", b =>
                {
                    b.Property<int>("ProgramLogExerciseAuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SelectedCount")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgramLogExerciseAuditId");

                    b.ToTable("ProgramLogExerciseAudit");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ProgramLogExerciseTonnage", b =>
                {
                    b.Property<int>("ProgramLogExerciseTonnageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<decimal>("ExerciseTonnage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProgramLogExerciseId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgramLogExerciseTonnageId");

                    b.HasIndex("ProgramLogExerciseId")
                        .IsUnique();

                    b.ToTable("ProgramLogExerciseTonnage");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ProgramLogRepScheme", b =>
                {
                    b.Property<int>("ProgramLogRepSchemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AMRAP")
                        .HasColumnType("bit");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LiftingStatAuditId")
                        .HasColumnType("int");

                    b.Property<int>("NoOfReps")
                        .HasColumnType("int");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProgramLogExerciseId")
                        .HasColumnType("int");

                    b.Property<int?>("RepsCompleted")
                        .HasColumnType("int");

                    b.Property<int>("SetNo")
                        .HasColumnType("int");

                    b.Property<decimal>("WeightLifted")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProgramLogRepSchemeId");

                    b.HasIndex("LiftingStatAuditId")
                        .IsUnique()
                        .HasFilter("[LiftingStatAuditId] IS NOT NULL");

                    b.HasIndex("ProgramLogExerciseId");

                    b.ToTable("ProgramLogRepScheme");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ProgramLogWeek", b =>
                {
                    b.Property<int>("ProgramLogWeekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProgramLogId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WeekNo")
                        .HasColumnType("int");

                    b.HasKey("ProgramLogWeekId");

                    b.HasIndex("ProgramLogId");

                    b.ToTable("ProgramLogWeek");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.Quote", b =>
                {
                    b.Property<int>("QuoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("QuoteCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuoteStr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Year")
                        .HasColumnType("smallint");

                    b.HasKey("QuoteId");

                    b.ToTable("Quote");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.RepSchemeType", b =>
                {
                    b.Property<int>("RepSchemeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("RepSchemeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RepSchemeTypeId");

                    b.ToTable("RepSchemeType");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateDay", b =>
                {
                    b.Property<int>("TemplateDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DayNo")
                        .HasColumnType("int");

                    b.Property<int>("TemplateWeekId")
                        .HasColumnType("int");

                    b.HasKey("TemplateDayId");

                    b.HasIndex("TemplateWeekId");

                    b.ToTable("TemplateDay");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateDifficulty", b =>
                {
                    b.Property<int>("TemplateDifficultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TemplateDifficultyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemplateDifficultyId");

                    b.ToTable("TemplateDifficulty");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateExercise", b =>
                {
                    b.Property<int>("TemplateExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BackOffSetFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<bool>("HasBackOffSets")
                        .HasColumnType("bit");

                    b.Property<int>("NoOfSets")
                        .HasColumnType("int");

                    b.Property<string>("RepSchemeFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepSchemeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemplateDayId")
                        .HasColumnType("int");

                    b.HasKey("TemplateExerciseId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("TemplateDayId");

                    b.ToTable("TemplateExercise");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateExerciseCollection", b =>
                {
                    b.Property<int>("TemplateExerciseCollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateProgramId")
                        .HasColumnType("int");

                    b.HasKey("TemplateExerciseCollectionId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("TemplateProgramId");

                    b.ToTable("TemplateExerciseCollection");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateProgram", b =>
                {
                    b.Property<int>("TemplateProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ActiveUsersCount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficulty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfDaysPerWeek")
                        .HasColumnType("int");

                    b.Property<int>("NoOfWeeks")
                        .HasColumnType("int");

                    b.Property<string>("TemplateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeightProgressionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemplateProgramId");

                    b.ToTable("TemplateProgram");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateProgramAudit", b =>
                {
                    b.Property<int>("TemplateProgramAuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("TemplateProgramId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TemplateProgramAuditId");

                    b.HasIndex("TemplateProgramId");

                    b.HasIndex("UserId");

                    b.ToTable("TemplateProgramAudit");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateRepScheme", b =>
                {
                    b.Property<int>("TemplateRepSchemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AMRAP")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBackOffSet")
                        .HasColumnType("bit");

                    b.Property<int>("NoOfReps")
                        .HasColumnType("int");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SetNo")
                        .HasColumnType("int");

                    b.Property<int>("TemplateExerciseId")
                        .HasColumnType("int");

                    b.Property<decimal>("WeightLifted")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TemplateRepSchemeId");

                    b.HasIndex("TemplateExerciseId");

                    b.ToTable("TemplateRepScheme");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateWeek", b =>
                {
                    b.Property<int>("TemplateWeekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("TemplateProgramId")
                        .HasColumnType("int");

                    b.Property<int>("WeekNo")
                        .HasColumnType("int");

                    b.HasKey("TemplateWeekId");

                    b.HasIndex("TemplateProgramId");

                    b.ToTable("TemplateWeek");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FirstVisit")
                        .HasColumnType("bit");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LiftingStatId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MemberStatusId")
                        .HasColumnType("int");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SportType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Email");

                    b.HasIndex("GenderId");

                    b.HasIndex("MemberStatusId");

                    b.ToTable("IdentityUser");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.UserSetting", b =>
                {
                    b.Property<int>("UserSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("BodyWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LiftingLevelId")
                        .HasColumnType("int");

                    b.Property<bool>("QuotesEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("UsingMetric")
                        .HasColumnType("bit");

                    b.HasKey("UserSettingId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("UserSetting");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.WorkoutDay", b =>
                {
                    b.Property<int>("WorkoutDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WeekNo")
                        .HasColumnType("int");

                    b.Property<int?>("WorkoutLogId")
                        .HasColumnType("int");

                    b.HasKey("WorkoutDayId");

                    b.HasIndex("WorkoutLogId");

                    b.ToTable("WorkoutDay");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.WorkoutExercise", b =>
                {
                    b.Property<int>("WorkoutExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutDayId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutExerciseTonnageId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkoutTemplateId")
                        .HasColumnType("int");

                    b.HasKey("WorkoutExerciseId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutDayId");

                    b.ToTable("WorkoutExercise");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.WorkoutExerciseAudit", b =>
                {
                    b.Property<int>("WorkoutExerciseAuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("SelectedCount")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkoutExerciseAuditId");

                    b.ToTable("WorkoutExerciseAudit");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.WorkoutExerciseTonnage", b =>
                {
                    b.Property<int>("WorkoutExerciseTonnageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<decimal>("ExerciseTonnage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkoutExerciseId")
                        .HasColumnType("int");

                    b.HasKey("WorkoutExerciseTonnageId");

                    b.HasIndex("WorkoutExerciseId")
                        .IsUnique();

                    b.ToTable("WorkoutExerciseTonnage");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.WorkoutLog", b =>
                {
                    b.Property<int>("WorkoutLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CustomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Friday")
                        .HasColumnType("bit");

                    b.Property<bool>("Monday")
                        .HasColumnType("bit");

                    b.Property<bool>("Saturday")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Sunday")
                        .HasColumnType("bit");

                    b.Property<int?>("TemplateProgramId")
                        .HasColumnType("int");

                    b.Property<bool>("Thursday")
                        .HasColumnType("bit");

                    b.Property<bool>("Tuesday")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Wednesday")
                        .HasColumnType("bit");

                    b.HasKey("WorkoutLogId");

                    b.HasIndex("TemplateProgramId");

                    b.ToTable("WorkoutLog");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.WorkoutSet", b =>
                {
                    b.Property<int>("WorkoutSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AMRAP")
                        .HasColumnType("bit");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LiftingStatAuditId")
                        .HasColumnType("int");

                    b.Property<int?>("LiftingStatAuditId1")
                        .HasColumnType("int");

                    b.Property<int>("NoOfReps")
                        .HasColumnType("int");

                    b.Property<int?>("RepsCompleted")
                        .HasColumnType("int");

                    b.Property<decimal>("WeightLifted")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WorkoutExerciseId")
                        .HasColumnType("int");

                    b.HasKey("WorkoutSetId");

                    b.HasIndex("LiftingStatAuditId")
                        .IsUnique()
                        .HasFilter("[LiftingStatAuditId] IS NOT NULL");

                    b.HasIndex("LiftingStatAuditId1");

                    b.HasIndex("WorkoutExerciseId");

                    b.ToTable("WorkoutSet");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.WorkoutTemplate", b =>
                {
                    b.Property<int>("WorkoutTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkoutName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkoutTemplateId");

                    b.ToTable("WorkoutTemplate");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.Exercise", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.ExerciseType", "ExerciseType")
                        .WithMany()
                        .HasForeignKey("ExerciseTypeId");

                    b.Navigation("ExerciseType");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ExerciseMuscleGroupAssoc", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.Exercise", null)
                        .WithMany("ExerciseMuscleGroups")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ExerciseSport", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.Exercise", null)
                        .WithMany("ExerciseSports")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.LiftingLevel", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.UserSetting", null)
                        .WithOne("LiftingLevel")
                        .HasForeignKey("PowerBuddy.Data.Entities.LiftingLevel", "LiftingLevelId");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.LiftingStatAudit", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.Exercise", "Exercise")
                        .WithMany("LiftingStatAudit")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PowerBuddy.Data.Entities.User", "User")
                        .WithMany("LiftingStatAudit")
                        .HasForeignKey("UserId");

                    b.Navigation("Exercise");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ProgramLog", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.TemplateProgram", "TemplateProgram")
                        .WithMany()
                        .HasForeignKey("TemplateProgramId");

                    b.Navigation("TemplateProgram");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ProgramLogDay", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.ProgramLogWeek", null)
                        .WithMany("ProgramLogDays")
                        .HasForeignKey("ProgramLogWeekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ProgramLogExercise", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PowerBuddy.Data.Entities.ProgramLogDay", null)
                        .WithMany("ProgramLogExercises")
                        .HasForeignKey("ProgramLogDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PowerBuddy.Data.Entities.WorkoutTemplate", "WorkoutTemplate")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("WorkoutTemplateId");

                    b.Navigation("Exercise");

                    b.Navigation("WorkoutTemplate");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ProgramLogExerciseTonnage", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.ProgramLogExercise", "ProgramLogExercise")
                        .WithOne("ProgramLogExerciseTonnage")
                        .HasForeignKey("PowerBuddy.Data.Entities.ProgramLogExerciseTonnage", "ProgramLogExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ProgramLogExercise");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ProgramLogRepScheme", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.LiftingStatAudit", "LiftingStatAudit")
                        .WithOne("ProgramLogRepScheme")
                        .HasForeignKey("PowerBuddy.Data.Entities.ProgramLogRepScheme", "LiftingStatAuditId");

                    b.HasOne("PowerBuddy.Data.Entities.ProgramLogExercise", null)
                        .WithMany("ProgramLogRepSchemes")
                        .HasForeignKey("ProgramLogExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("LiftingStatAudit");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ProgramLogWeek", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.ProgramLog", "ProgramLog")
                        .WithMany("ProgramLogWeeks")
                        .HasForeignKey("ProgramLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramLog");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateDay", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.TemplateWeek", null)
                        .WithMany("TemplateDays")
                        .HasForeignKey("TemplateWeekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateExercise", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PowerBuddy.Data.Entities.TemplateDay", null)
                        .WithMany("TemplateExercises")
                        .HasForeignKey("TemplateDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateExerciseCollection", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PowerBuddy.Data.Entities.TemplateProgram", null)
                        .WithMany("TemplateExerciseCollection")
                        .HasForeignKey("TemplateProgramId");

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateProgramAudit", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.TemplateProgram", "TemplateProgram")
                        .WithMany()
                        .HasForeignKey("TemplateProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PowerBuddy.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("TemplateProgram");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateRepScheme", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.TemplateExercise", null)
                        .WithMany("TemplateRepSchemes")
                        .HasForeignKey("TemplateExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateWeek", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.TemplateProgram", null)
                        .WithMany("TemplateWeeks")
                        .HasForeignKey("TemplateProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.User", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.Gender", "Gender")
                        .WithMany("Users")
                        .HasForeignKey("GenderId");

                    b.HasOne("PowerBuddy.Data.Entities.MemberStatus", "MemberStatus")
                        .WithMany("Users")
                        .HasForeignKey("MemberStatusId");

                    b.Navigation("Gender");

                    b.Navigation("MemberStatus");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.UserSetting", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.User", null)
                        .WithOne("UserSetting")
                        .HasForeignKey("PowerBuddy.Data.Entities.UserSetting", "UserId");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.WorkoutDay", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.WorkoutLog", "WorkoutLog")
                        .WithMany("WorkoutDays")
                        .HasForeignKey("WorkoutLogId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("WorkoutLog");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.WorkoutExercise", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PowerBuddy.Data.Entities.WorkoutDay", null)
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("WorkoutDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.WorkoutExerciseTonnage", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.WorkoutExercise", null)
                        .WithOne("WorkoutExerciseTonnage")
                        .HasForeignKey("PowerBuddy.Data.Entities.WorkoutExerciseTonnage", "WorkoutExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.WorkoutLog", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.TemplateProgram", "TemplateProgram")
                        .WithMany()
                        .HasForeignKey("TemplateProgramId");

                    b.Navigation("TemplateProgram");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.WorkoutSet", b =>
                {
                    b.HasOne("PowerBuddy.Data.Entities.LiftingStatAudit", null)
                        .WithOne("WorkoutSet")
                        .HasForeignKey("PowerBuddy.Data.Entities.WorkoutSet", "LiftingStatAuditId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PowerBuddy.Data.Entities.LiftingStatAudit", "LiftingStatAudit")
                        .WithMany()
                        .HasForeignKey("LiftingStatAuditId1");

                    b.HasOne("PowerBuddy.Data.Entities.WorkoutExercise", null)
                        .WithMany("WorkoutSets")
                        .HasForeignKey("WorkoutExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("LiftingStatAudit");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.Exercise", b =>
                {
                    b.Navigation("ExerciseMuscleGroups");

                    b.Navigation("ExerciseSports");

                    b.Navigation("LiftingStatAudit");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.Gender", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.LiftingStatAudit", b =>
                {
                    b.Navigation("ProgramLogRepScheme");

                    b.Navigation("WorkoutSet");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.MemberStatus", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ProgramLog", b =>
                {
                    b.Navigation("ProgramLogWeeks");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ProgramLogDay", b =>
                {
                    b.Navigation("ProgramLogExercises");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ProgramLogExercise", b =>
                {
                    b.Navigation("ProgramLogExerciseTonnage");

                    b.Navigation("ProgramLogRepSchemes");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.ProgramLogWeek", b =>
                {
                    b.Navigation("ProgramLogDays");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateDay", b =>
                {
                    b.Navigation("TemplateExercises");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateExercise", b =>
                {
                    b.Navigation("TemplateRepSchemes");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateProgram", b =>
                {
                    b.Navigation("TemplateExerciseCollection");

                    b.Navigation("TemplateWeeks");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.TemplateWeek", b =>
                {
                    b.Navigation("TemplateDays");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.User", b =>
                {
                    b.Navigation("LiftingStatAudit");

                    b.Navigation("UserSetting");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.UserSetting", b =>
                {
                    b.Navigation("LiftingLevel");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.WorkoutDay", b =>
                {
                    b.Navigation("WorkoutExercises");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.WorkoutExercise", b =>
                {
                    b.Navigation("WorkoutExerciseTonnage");

                    b.Navigation("WorkoutSets");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.WorkoutLog", b =>
                {
                    b.Navigation("WorkoutDays");
                });

            modelBuilder.Entity("PowerBuddy.Data.Entities.WorkoutTemplate", b =>
                {
                    b.Navigation("WorkoutExercises");
                });
#pragma warning restore 612, 618
        }
    }
}
