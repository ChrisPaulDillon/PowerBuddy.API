# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - master

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: "06a60d39-e417-495b-92b6-670f286d21ac"
  imageRepository: "powerbuddyapi"
  containerRegistry: "powerbuddy.azurecr.io"
  dockerfilePath: "$(Build.SourcesDirectory)/Dockerfile"
  tag: "$(Build.BuildId)"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: "xunit_tests"
        pool:
          name: Default
          variables:
          buildConfiguration: "Release"
        steps:
          - task: UseDotNet@2
            displayName: "Use dotnet sdk 3.x"
            inputs:
              version: 3.x
          - task: UseDotNet@2
            displayName: "Use dotnet sdk 2.x"
            inputs:
              version: 2.x
          - script: echo "$(nuget.config)" > Nuget.config
          - script: dotnet restore --configfile Nuget.config
          - script: dotnet build --configuration $(buildConfiguration)
            displayName: "dotnet build $(buildConfiguration)"
          - task: DotNetCoreCLI@2
            inputs:
              command: test
              projects: "**/**.UnitTests/*.csproj"
              arguments: "--configuration $(buildConfiguration)"

      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: NuGetCommand@2
            displayName: GitVersion
            inputs:
              command: custom
              arguments: install GitVersion.CommandLine -Version 5.0.1 -OutputDirectory $(Build.BinariesDirectory)/tools -ExcludeVersion
          - script: mono $(Build.BinariesDirectory)/tools/GitVersion.CommandLine/tools/GitVersion.exe /output buildserver /nofetch
          - script: echo "##vso[build.updatebuildnumber]$(GitVersion.SemVer)"

          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
